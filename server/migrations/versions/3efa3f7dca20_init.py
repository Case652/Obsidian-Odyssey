"""init

Revision ID: 3efa3f7dca20
Revises: 
Create Date: 2023-12-19 23:28:42.726752

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '3efa3f7dca20'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('card_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tag', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cards',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('card_name', sa.String(), nullable=False),
    sa.Column('image', sa.String(), nullable=True),
    sa.Column('gold_cost', sa.Integer(), nullable=True),
    sa.Column('mana_cost', sa.Integer(), nullable=True),
    sa.Column('mana_gain', sa.Integer(), nullable=True),
    sa.Column('hp_cost', sa.Integer(), nullable=True),
    sa.Column('damage', sa.Integer(), nullable=True),
    sa.Column('block', sa.Integer(), nullable=True),
    sa.Column('heal', sa.Integer(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('level_chart',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('level', sa.Integer(), nullable=False),
    sa.Column('experience_cap', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('mobs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('mob_name', sa.String(), nullable=False),
    sa.Column('image', sa.String(), nullable=True),
    sa.Column('hitpoints', sa.Integer(), nullable=True),
    sa.Column('max_hitpoints', sa.Integer(), nullable=True),
    sa.Column('mana', sa.Integer(), nullable=True),
    sa.Column('max_mana', sa.Integer(), nullable=True),
    sa.Column('draw', sa.Integer(), nullable=True),
    sa.Column('block', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('_password_hash', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('characters',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('character_name', sa.String(), nullable=False),
    sa.Column('image', sa.String(), nullable=True),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('experience', sa.Integer(), nullable=True),
    sa.Column('experience_cap', sa.Integer(), nullable=True),
    sa.Column('skill_point', sa.Integer(), nullable=True),
    sa.Column('gold', sa.Integer(), nullable=True),
    sa.Column('hitpoints', sa.Integer(), nullable=True),
    sa.Column('max_hitpoints', sa.Integer(), nullable=True),
    sa.Column('mana', sa.Integer(), nullable=True),
    sa.Column('max_mana', sa.Integer(), nullable=True),
    sa.Column('draw', sa.Integer(), nullable=True),
    sa.Column('block', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_characters_user_id_users')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('mob_decks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('mob_id', sa.Integer(), nullable=True),
    sa.Column('card_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['card_id'], ['cards.id'], name=op.f('fk_mob_decks_card_id_cards')),
    sa.ForeignKeyConstraint(['mob_id'], ['mobs.id'], name=op.f('fk_mob_decks_mob_id_mobs')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('decks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('character_id', sa.Integer(), nullable=True),
    sa.Column('card_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['card_id'], ['cards.id'], name=op.f('fk_decks_card_id_cards')),
    sa.ForeignKeyConstraint(['character_id'], ['characters.id'], name=op.f('fk_decks_character_id_characters'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('fights',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('turn', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('mob_name', sa.String(), nullable=False),
    sa.Column('image', sa.String(), nullable=True),
    sa.Column('level', sa.String(), nullable=True),
    sa.Column('hitpoints', sa.Integer(), nullable=True),
    sa.Column('max_hitpoints', sa.Integer(), nullable=True),
    sa.Column('mana', sa.Integer(), nullable=True),
    sa.Column('max_mana', sa.Integer(), nullable=True),
    sa.Column('draw', sa.Integer(), nullable=True),
    sa.Column('block', sa.Integer(), nullable=True),
    sa.Column('character_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['character_id'], ['characters.id'], name=op.f('fk_fights_character_id_characters')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('in_fight_mob_decks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('fight_id', sa.Integer(), nullable=True),
    sa.Column('card_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['card_id'], ['cards.id'], name=op.f('fk_in_fight_mob_decks_card_id_cards')),
    sa.ForeignKeyConstraint(['fight_id'], ['fights.id'], name=op.f('fk_in_fight_mob_decks_fight_id_fights')),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('in_fight_mob_decks')
    op.drop_table('fights')
    op.drop_table('decks')
    op.drop_table('mob_decks')
    op.drop_table('characters')
    op.drop_table('users')
    op.drop_table('mobs')
    op.drop_table('level_chart')
    op.drop_table('cards')
    op.drop_table('card_types')
    # ### end Alembic commands ###
